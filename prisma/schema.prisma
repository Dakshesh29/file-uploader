// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  files   File[]
  folders Folder[]
}

model Folder {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user    User   @relation(fields: [userId], references: [id])
  userId  String

  files File[]

 
  parent   Folder? @relation("SubFolders", fields: [parentId], references: [id])
  parentId String?

  subFolders Folder[] @relation("SubFolders")

  shareLinks ShareLink[]
}

model File {
  id           String   @id @default(cuid())
  originalName String
  storageName  String   
  fileUrl      String
  size         Int      
  mimeType     String   
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user    User   @relation(fields: [userId], references: [id])
  userId  String

  folder   Folder? @relation(fields: [folderId], references: [id])
  folderId String?

  tags Tag[]
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique

  files File[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model ShareLink {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  expiresAt DateTime 

  
  folder   Folder @relation(fields: [folderId], references: [id])
  folderId String @unique 
}